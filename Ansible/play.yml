---
-
 hosts: all
 tasks:
     - name: Install Python3
       become: yes
       apt: name=python3 update_cache=yes state=latest

     - name: Install Git package
       become: yes
       apt: name=git update_cache=yes state=latest
     
     - name: Install gnupg-agent
       become: yes
       apt: name=gnupg-agent update_cache=yes state=latest
     
     - name: Add Docker GPG apt Key
       become: yes
       apt_key: 
         url: https://download.docker.com/linux/ubuntu/gpg
         state: present
     
     - name: Save the current Ubuntu release version into a variable
       become: yes
       shell: lsb_release -cs
       register: ubuntu_version
    
     - name: Add Docker Repository
       become: yes
       apt_repository:
         repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
         state: present   
       
     - name: Install Docker
       become: yes
       apt:
         name: "docker-ce"
         state: present
         force_apt_get: "yes"
         
     - name: Creates directory
       become: yes
       file:
         path: docker
         state: directory
    
     - name: Install pip
       become: yes
       apt: name=python3-pip update_cache=yes state=latest
      
     - name: install docker
       become: yes
       pip: name=docker
         
     - name: Git checkout nodejs site
       become: yes
       git:
         repo: "{{ app_repo }}"
         dest: docker
     
     - name: Build Docker image from Dockerfile
       become: yes
       docker_image:
         name: web
         build:
           path: docker
           pull: yes
         source: build
         state: present
     
     - name: Running the container
       become: yes
       docker_container:
         image: web:latest
         name: webApp
         state: started
         restart_policy: always
         exposed_ports: "{{ app_port }}"
         published_ports: "{{ app_port }}:3000"
         
        
     - name: Check if container is running
       become: yes
       shell: "docker ps"
       register: ps_output
   
     - name: Show output of docker ps
       become: yes
       debug:
         msg: "Container Output: {{ps_output.stdout}}" 
