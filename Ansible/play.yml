---
-
 hosts: all
 vars: 
    CTOP_VERSION: "0.7.3"
    DOCKER_COMPOSE_VERSION: "1.25.1"
    DOCKER_PACKAGES:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
 tasks:
     - name: Install Python3
       become: yes
       apt: name=python3 update_cache=yes state=latest

     - name: Install Git package
       become: yes
       apt: name=git update_cache=yes state=latest

     - name: Install Apache2
       become: yes
       apt: name=apache2 update_cache=yes state=latest

     - name: enabled mod_rewrite
       become: yes
       apache2_module: name=rewrite state=present

#     - name: apache2 listen on port 443
#       become: yes
#       lineinfile: dest=/etc/apache2/ports.conf regexp="^Listen 80" line="Listen 443" state=present

#     - name: apache2 virtualhost on port 443
#       become: yes
#       lineinfile: dest=/etc/apache2/sites-available/000-default.conf regexp="^<VirtualHost \*:80>" line="<VirtualHost *:443>" state=present

     - name: remove default Apache port.conf
       become: yes
       file: 
         path: /etc/apache2/ports.conf
         state: absent
         
     - name: remove default Apache default.conf
       become: yes
       file: 
         path: /etc/apache2/sites-available/000-default.conf
         state: absent
         
     - name: Create Apache port.conf
       become: yes
       template:
          src: templates/ports.conf.j2
          dest: /etc/apache2/ports.conf
          
     - name: Create Apache default.conf
       become: yes
       template:
          src: templates/000-default.conf.j2
          dest: /etc/apache2/sites-available/000-default.conf
       
     - name: remove default website directory
       become: yes
       file:
         path: /var/www/html
         state: absent

     - name: Git checkout website
       become: yes
       git:
         repo: "{{ app_repo }}"
         dest: /var/www/html
       notify:
         - restart apache2
     
     - name: Install packages needed for Docker
       apt: 
         name: "{{DOCKER_PACKAGES}}"
         state: present
         force_apt_get: "yes"
     
     - name: Add Docker GPG apt Key
       apt_key: 
         url: https://download.docker.com/linux/ubuntu/gpg
         state: present
     
     - name: Save the current Ubuntu release version into a variable
       shell: lsb_release -cs
       register: ubuntu_version
    
     - name: Add Docker Repository
       apt_repository:
         repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
         state: present
      
     - name: Install Docker
       apt:
         name: "docker-ce"
         state: present
         force_apt_get: "yes"
   
    - name: Test Docker with hello world example
      shell: "docker run hello-world"
      register: hello_world_output
   
    - name: Show output of hello word example
      debug:
        msg: "Container Output: {{hello_world_output.stdout}}"    
  
    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-Linux-x86_64
        dest: "/usr/local/bin/docker-compose"
        mode: 0755
 
    - name: Install Ctop
      get_url:
        url: https://github.com/bcicen/ctop/releases/download/v{{ CTOP_VERSION }}/ctop-{{ CTOP_VERSION }}-linux-amd64
        dest: "/usr/local/bin/ctop"
        mode: 0755

    - name: Reboot server in order for changes to take place
      shell: "sleep 1 && reboot"
      async: 1
      poll: 0
     
 handlers:
   - name: restart apache2
     become: yes
     service: name=apache2 state=restarted
