---
-
 hosts: all
 tasks:
     - name: Install Python3
       become: yes
       apt: name=python3 update_cache=yes state=latest

     - name: Install Git package
       become: yes
       apt: name=git update_cache=yes state=latest

     - name: Install Apache2
       become: yes
       apt: name=apache2 update_cache=yes state=latest

     - name: enabled mod_rewrite
       become: yes
       apache2_module: name=rewrite state=present

#     - name: apache2 listen on port 443
#       become: yes
#       lineinfile: dest=/etc/apache2/ports.conf regexp="^Listen 80" line="Listen 443" state=present

#     - name: apache2 virtualhost on port 443
#       become: yes
#       lineinfile: dest=/etc/apache2/sites-available/000-default.conf regexp="^<VirtualHost \*:80>" line="<VirtualHost *:443>" state=present

     - name: remove default Apache port.conf
       become: yes
       file: 
         path: /etc/apache2/ports.conf
         state: absent
         
     - name: remove default Apache default.conf
       become: yes
       file: 
         path: /etc/apache2/sites-available/000-default.conf
         state: absent
         
     - name: Create Apache port.conf
       become: yes
       template:
          src: templates/ports.conf.j2
          dest: /etc/apache2/ports.conf
          
     - name: Create Apache default.conf
       become: yes
       template:
          src: templates/000-default.conf.j2
          dest: /etc/apache2/sites-available/000-default.conf
       
     - name: remove default website directory
       become: yes
       file:
         path: /var/www/html
         state: absent

#     - name: Git checkout website
#       become: yes
#       git:
#         repo: "{{ app_repo }}"
#         dest: /var/www/html
#       notify:
#         - restart apache2
     
     - name: Install apt-transport-https
       become: yes
       apt: name=apt-transport-https update_cache=yes state=latest
      
     - name: Install ca-certificates
       become: yes
       apt: name=ca-certificates update_cache=yes state=latest
     
     - name: Install curl
       become: yes
       apt: name=curl update_cache=yes state=latest
     
     - name: Install gnupg-agent
       become: yes
       apt: name=gnupg-agent update_cache=yes state=latest
       
     - name: Install software-properties-common
       become: yes
       apt: name=software-properties-common update_cache=yes state=latest
     
     - name: Add Docker GPG apt Key
       become: yes
       apt_key: 
         url: https://download.docker.com/linux/ubuntu/gpg
         state: present
     
     - name: Save the current Ubuntu release version into a variable
       become: yes
       shell: lsb_release -cs
       register: ubuntu_version
    
     - name: Add Docker Repository
       become: yes
       apt_repository:
         repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
         state: present
      
     - name: Install Docker
       become: yes
       apt:
         name: "docker-ce"
         state: present
         force_apt_get: "yes"
   
     - name: Test Docker with hello world example
       become: yes
       shell: "docker run hello-world"
       register: hello_world_output
   
     - name: Show output of hello word example
       become: yes
       debug:
         msg: "Container Output: {{hello_world_output.stdout}}"    
     
     - name: Create docker group
       become: yes
       group:
         name: "docker"
         state: present

     - name: Adding user ubuntu to docker group
       become: yes
       user:
         name: "ubuntu"
         groups: "docker"
         append: "yes"
         
     - name: Install Docker Compose
       become: yes
       get_url:
         url: https://github.com/docker/compose/releases/download/1.25.1/docker-compose-Linux-x86_64
         dest: "/usr/local/bin/docker-compose"
         mode: 0755
 
     - name: Install Ctop
       become: yes
       get_url:
         url: https://github.com/bcicen/ctop/releases/download/v0.7.3/ctop-0.7.3-linux-amd64
         dest: "/usr/local/bin/ctop"
         mode: 0755
         
#     - name: Reboot server in order for changes to take place
#       become: yes
#       shell: "sleep 1 && reboot"
#       async: 1
#       poll: 0
       
     - name: Creates directory
       become: yes
       file:
         path: docker
         state: directory
    
     - name: Install pip
       become: yes
       apt: name=python-pip update_cache=yes state=latest
      
     - name: install docker-py
       become: yes
       pip: name=docker-py
         
     - name: Git checkout nodejs site
       become: yes
       git:
         repo: "{{ app_repo }}"
         dest: docker
     
     - name: Build Docker image from Dockerfile
       become: yes
       docker_image:
        name: web
        path: docker
        state: build
     
     - name: Running the container
       become: yes
       docker_container:
         image: web:latest
         path: docker
         state: running
        
     - name: Check if container is running
       shell: docker ps
     
 handlers:
   - name: restart apache2
     become: yes
     service: name=apache2 state=restarted
